var e=Object.defineProperty,t=Object.defineProperties,a=Object.getOwnPropertyDescriptors,n=Object.getOwnPropertySymbols,i=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable,s=(t,a,n)=>a in t?e(t,a,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[a]=n;import{R as o,N as l,r as u,S as m,m as c,a as p,b as h,c as g,H as d}from"./vendor.5fed1eac.js";!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver((e=>{for(const a of e)if("childList"===a.type)for(const e of a.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&t(e)})).observe(document,{childList:!0,subtree:!0})}function t(e){if(e.ep)return;e.ep=!0;const t=function(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerpolicy&&(t.referrerPolicy=e.referrerpolicy),"use-credentials"===e.crossorigin?t.credentials="include":"anonymous"===e.crossorigin?t.credentials="omit":t.credentials="same-origin",t}(e);fetch(e.href,t)}}();var y=[{id:"01",question:"reverse an array",questionDescription:"Reverse an array",questionLink:"https://www.geeksforgeeks.org/write-a-program-to-reverse-an-array-or-string/",samples:[{input:"{1,2,3,4,5}",output:"{5,4,3,2,1}"},{input:"{324, 435, 456, 46}",output:"{46, 456, 435, 324}"}],solutionLink:"https://raw.githubusercontent.com/suhas1294/love-babbar-450-dsa/main/src/main/java/rishi/atreya/_01_arrays/_01_ReverseArray.java",solutionLogic:"use two pointers - one at array start and another one at array end, move both towards each other",solutionSteps:[],tags:["2pointer","recursion"],credits:"https://www.geeksforgeeks.org/write-a-program-to-reverse-an-array-or-string/",time_complexity:"O(n)",space_complexity:""},{id:"02",question:"Min and max element in an array",questionDescription:"Find the minimum and maximum number in an array (with as less comparisons as possible)",questionLink:"https://www.geeksforgeeks.org/maximum-and-minimum-in-an-array/",samples:[{input:"1,2,3,4,5",output:"min: 1, max : 5"},{input:"324,435,456,46",output:"min: 46, max: 456"}],solutionLink:"https://raw.githubusercontent.com/suhas1294/love-babbar-450-dsa/main/src/main/java/rishi/atreya/_01_arrays/_02_MinMaxInArray.java",solutionLogic:"",solutionSteps:["step1: base condition-1 : return only element if array size is 1","step2 : base condition 2: compare only existing 2 elements in array and return min and max","step3: split array into two and recursively call findMinMax method"],tags:["recursion","divideArray","tournamentMethod"],credits:"https://www.geeksforgeeks.org/maximum-and-minimum-in-an-array/",time_complexity:"O(n)",space_complexity:""},{id:"03",question:"Kth largest element in array",questionDescription:"Find kth largest element in an array of size N",questionLink:"https://practice.geeksforgeeks.org/problems/kth-smallest-element5635/1",samples:[{input:"input = {7 10 4 20 15}, k = 4",output:"15",explaination:"15 is 4th largest element in array"},{input:"input = {7 10 4 3 20 15}, k = 3",output:"7",explaination:"7 is 3rd largest element in array"}],solutionLink:"https://raw.githubusercontent.com/suhas1294/love-babbar-450-dsa/main/src/main/java/rishi/atreya/_01_arrays/_03_FindKthLargestElementInArray.java",solutionLogic:"",solutionSteps:["step1 : sort the array desending order using any nlogn algo like quick/merge sort","step2 : return the kth element in array","step3: Alternatively, Min/Max Heap can also be used"],tags:["sortArray"],credits:"https://www.geeksforgeeks.org/kth-smallestlargest-element-unsorted-array/",time_complexity:"O(N Log N) ",space_complexity:""},{id:"04",question:"Sort an array of 0s, 1s and 2s",questionDescription:"Sort an array of 0s, 1s and 2s",questionLink:"https://www.geeksforgeeks.org/sort-an-array-of-0s-1s-and-2s/",samples:[{input:"{0, 2, 1, 2, 0}",output:"[0, 0, 1, 2, 2]"}],solutionLink:"https://raw.githubusercontent.com/suhas1294/love-babbar-450-dsa/main/src/main/java/rishi/atreya/_01_arrays/_04_Sort012.java",solutionLogic:"",solutionSteps:["step1 : keep 3 pointers : 0, 1, 2","step2 : while mid <= high : case 0 - swap low and mid, low++ mid ++, case 1 : mid++, case 2: swap mid and high, high --"],tags:["3pointer","dutchNationalFlag","arraySprting"],credits:"https://www.geeksforgeeks.org/sort-an-array-of-0s-1s-and-2s/",time_complexity:"O(n)",space_complexity:"O(1)"},{id:"05",question:"Seggregate negative and positive numbers in array",questionDescription:"Seggregate negative numbers (towards left )and positive numbers (towards right) in array",questionLink:"https://www.geeksforgeeks.org/move-negative-numbers-beginning-positive-end-constant-extra-space/",samples:[{input:"{ -1, 2, -3, 4, 5, 6, -7, 8, 9 }",output:"[-1, -3, -7, 4, 5, 6, 2, 8, 9]"}],solutionLink:"https://raw.githubusercontent.com/suhas1294/love-babbar-450-dsa/main/src/main/java/rishi/atreya/_01_arrays/_05_SeggregatePositiveNegative.java",solutionLogic:"",solutionSteps:["step1 : while traversing array, if arr[i] < 0, swap arr[i] and arr[j] and j++"],tags:["linearTraversal"],credits:"https://www.geeksforgeeks.org/move-negative-numbers-beginning-positive-end-constant-extra-space/",time_complexity:"O(n)",space_complexity:"O(1)"},{id:"06",question:"Union of two unsorted arrays",questionDescription:"Given two arrays a[] and b[] of size n and m respectively. The task is to find union between these two arrays and return array length. Union of the two arrays can be defined as the set containing distinct elements from both the arrays. If there are repetitions, then only one occurrence of element should be printed in the union.",questionLink:"https://www.geeksforgeeks.org/move-negative-numbers-beginning-positive-end-constant-extra-space/",samples:[{input:"a1 : { 1 2 3 4 5 }, a2: {1 2 3, 9}",output:"6",explaination:"after union, array = {1, 2, 3, 4, 5, 9} and array length would be 6"}],solutionLink:"https://raw.githubusercontent.com/suhas1294/love-babbar-450-dsa/main/src/main/java/rishi/atreya/_01_arrays/_06_UnionOfTwoUnsortedArrays.java",solutionLogic:"",solutionSteps:["solution-1 : using hashset and hashmap","solution-2 : using array. use array index as hashkey and mark value as presence"],tags:["unsorted","union"],credits:"https://www.geeksforgeeks.org/move-negative-numbers-beginning-positive-end-constant-extra-space/",time_complexity:"O((n+m)log(n+m))",space_complexity:"O(n+m)"},{id:"07",question:"Cyclically rotate an array by one ",questionDescription:"Given an array, rotate the array by one position in clock-wise direction.",questionLink:"https://www.geeksforgeeks.org/c-program-cyclically-rotate-array-one/",samples:[{input:"{1, 2, 3, 4, 5}",output:"{5 1 2 3 4}"}],solutionLink:"https://raw.githubusercontent.com/suhas1294/love-babbar-450-dsa/main/src/main/java/rishi/atreya/_01_arrays/_07_RotateArrayByOne.java",solutionLogic:"",solutionSteps:["solution-1 : loop through array from last to first and transfer value to next index","solution-2 : two pointer, increment only left pointer"],tags:["2pointer","rotate"],credits:"https://www.geeksforgeeks.org/c-program-cyclically-rotate-array-one/",time_complexity:"O(n)",space_complexity:""},{id:"08",question:"Kadane's Algorithm : Largest Sum Contiguous Subarray ",questionDescription:"Given an array Arr[] of N integers. Find the contiguous sub-array(containing at least one number) which has the maximum sum and return its sum.",questionLink:"https://www.geeksforgeeks.org/c-program-cyclically-rotate-array-one/",samples:[{input:"{-2, -3, 4, -1, -2, 1, 5, -3}",output:" [4, -1, -2, 1, 5]"}],solutionLink:"https://raw.githubusercontent.com/suhas1294/love-babbar-450-dsa/main/src/main/java/rishi/atreya/_01_arrays/_08_KadanesAlgo.java",solutionLogic:"",solutionSteps:["step-1 : initialise two variables - one is max sum and one more current sum","step-2 : In a single loop, update values of curSum and maxSum depending upon summation of array numbers until that point."],tags:["Kadane","subArray","dynamicProgramming"],credits:"https://www.geeksforgeeks.org/c-program-cyclically-rotate-array-one/",time_complexity:"O(n)",space_complexity:""},{id:"09",question:"Minimize the max diff between heights ",questionDescription:"Given an array arr[] denoting heights of N towers and a positive integer K, you have to modify the height of each tower either by increasing or decreasing them by K only once. After modifying, height should be a non-negative integer. Find out what could be the possible minimum difference of the height of shortest and longest towers after you have modified each tower.",questionLink:"https://www.geeksforgeeks.org/c-program-cyclically-rotate-array-one/",samples:[{input:"K = 2, N = 4 Arr[] = {1, 5, 8, 10}",output:"5",explaination:"The array can be modified as  {3, 3, 6, 8}. The difference between the largest and the smallest is 8-3 = 5."},{input:"K = 3, N = 5 Arr[] = {3, 9, 12, 16, 20}",output:"11",explaination:"The array can be modified as {6, 12, 9, 13, 17}. The difference between the largest and the smallest is 17-6 = 11. "}],solutionLink:"https://raw.githubusercontent.com/suhas1294/love-babbar-450-dsa/main/src/main/java/rishi/atreya/_01_arrays/_09_MinimizeMaxDiffBwHeights.java",solutionLogic:"We know minimum value when we add k to whole array---\x3e newMin. So we need to find minimum element when we subtract k from whole array so while searching for minimum element {arr[i]-k} we should search from---\x3e[1,arr.length-1] and similarly for maximum element we should search from---\x3e [0,arr.length-2] so that we can check the height difference between all pairs of adjacent elements because adjacent elements will have small height difference as the array is a sorted one.",solutionSteps:["step-1 : newMax = max - k, newMin = min +k, ans = last element - first element in sorted array, take 2 temp variables : tempMax and tempMin","step-2 : loop from 0 to n-1, max is max of (newMax, ith no + k), min will be min(newMin, i'th+1 no + k","step-3 : inside loop, if curMin <=0 , ans = min(ans, curMax-curMin)"],tags:["tower","height"],credits:"https://www.geeksforgeeks.org/c-program-cyclically-rotate-array-one/",time_complexity:"O(N*logN)",space_complexity:"O(N)"},{id:"10",question:"Minimum number of jumps",questionDescription:"Given an array of N integers arr[] where each element represents the max number of steps that can be made forward from that element. Find the minimum number of jumps to reach the end of the array (starting from the first element). If an element is 0, then you cannot move through that element. Note: Return -1 if you can't reach the end of the array",questionLink:"https://practice.geeksforgeeks.org/problems/minimum-number-of-jumps-1587115620/1#",samples:[{input:"{1, 3, 5, 8, 9, 2, 6, 7, 6, 8, 9} ",output:"3",explaination:"First jump from 1st element to 2nd element with value 3. Now, from here  we jump to 5th element with value 9, and from here we will jump to last."},{input:"{2, 3, 1, 1, 2, 4, 2 ,0 ,1 ,1}",output:"4",explaination:"2 to 3, 3 to 2 , 2 to 4, 4 to last"}],solutionLink:"https://raw.githubusercontent.com/suhas1294/love-babbar-450-dsa/main/src/main/java/rishi/atreya/_01_arrays/_10_MinJumpsInArray.java",solutionLogic:"",solutionSteps:[],tags:["array","jump"],credits:"https://www.geeksforgeeks.org/minimum-number-of-jumps-to-reach-end-of-a-given-array/",time_complexity:"O(n)",space_complexity:""},{id:"11",question:"Find duplicate number",questionDescription:"Given an array of integers nums containing n + 1 integers where each integer is in the range [1, n] inclusive.There is only one repeated number in nums, return this repeated number.You must solve the problem without modifying the array nums and uses only constant extra space.",questionLink:"https://leetcode.com/problems/find-the-duplicate-number/",samples:[{input:"[1,3,4,2,2]",output:"2",explaination:"First jump from 1st element to 2nd element with value 3. Now, from here  we jump to 5th element with value 9, and from here we will jump to last."},{input:"[3,1,3,4,2]",output:"3",explaination:"2 to 3, 3 to 2 , 2 to 4, 4 to last"},{input:"[1,1,2]",output:"1",explaination:"2 to 3, 3 to 2 , 2 to 4, 4 to last"}],solutionLink:"https://raw.githubusercontent.com/suhas1294/love-babbar-450-dsa/main/src/main/java/rishi/atreya/_01_arrays/_11_FindDuplicateNumberInArray.java",solutionLogic:"",solutionSteps:["max = arr.length","max number that be there in array = arr.length - 1","total of numbers from 1 to n-1 is (n * (n+1)/2)","keep subtracting total from array numbers until u get negative no or a zero."],tags:["array","jump"],credits:"",time_complexity:"O(n)",space_complexity:""},{id:"12",question:"merge two sorted arrays and print the result (without using third array)",questionDescription:"Given two sorted arrays arr1[] of size N and arr2[] of size M. Each array is sorted in non-decreasing order. Merge the two arrays into one sorted array in non-decreasing order without using any extra space.",questionLink:"https://practice.geeksforgeeks.org/problems/merge-two-sorted-arrays5135/1#",samples:[{input:"arr1[] = {1, 3, 5, 7}, arr2[] = {0, 2, 6, 8, 9}",output:"0 1 2 3 5 6 7 8 9",explaination:"First jump from 1st element to 2nd element with value 3. Now, from here  we jump to 5th element with value 9, and from here we will jump to last."}],solutionLink:"https://raw.githubusercontent.com/suhas1294/love-babbar-450-dsa/main/src/main/java/rishi/atreya/_01_arrays/_12_MergeWithoutExtraSpace.java",solutionLogic:"merge sort logic",solutionSteps:[],tags:["mergeSort"],credits:"",time_complexity:"O(nlogn)",space_complexity:""},{id:"13",question:"merge intervals",questionDescription:"Given an array of intervals where intervals[i] = [start(i), end(i)], merge all overlapping intervals, and return an array of the non-overlapping intervals that cover all the intervals in the input.",questionLink:"https://leetcode.com/problems/merge-intervals/",samples:[{input:"intervals = [[1,3],[2,6],[8,10],[15,18]]",output:"[[1,6],[8,10],[15,18]]",explaination:"Since intervals [1,3] and [2,6] overlaps, merge them into [1,6]."},{input:"intervals = [[1,4],[4,5]]",output:"[[1,5]]",explaination:"Since intervals [1,3] and [2,6] overlaps, merge them into [1,6]."}],solutionLink:"https://raw.githubusercontent.com/suhas1294/love-babbar-450-dsa/main/src/main/java/rishi/atreya/_01_arrays/_13_MergeIntervals.java",solutionLogic:"",solutionSteps:[],tags:["interval"],credits:"",time_complexity:"",space_complexity:""},{id:"14",question:"Next permutation",questionDescription:"Implement next permutation, which rearranges numbers into the lexicographically next greater permutation of numbers. If such an arrangement is not possible, it must rearrange it as the lowest possible order (i.e., sorted in ascending order). The replacement must be in place and use only constant extra memory.",questionLink:"https://leetcode.com/problems/next-permutation/",samples:[{input:"[1,2,3]",output:"[1,3,2]",explaination:""},{input:"[3,2,1]",output:"[1,2,3]",explaination:""},{input:"[1,1,5]",output:"[1,5,1]",explaination:""}],solutionLink:"https://raw.githubusercontent.com/suhas1294/love-babbar-450-dsa/main/src/main/java/rishi/atreya/_01_arrays/_14_NextPermutation.java",solutionLogic:"",solutionSteps:[],tags:["permutation"],credits:"https://www.programcreek.com/2014/06/leetcode-next-permutation-java/",time_complexity:"O(n)",space_complexity:""},{id:"15",question:"Count inversion - how many steps required to sort array",questionDescription:"Given an array of integers. Find the Inversion Count in the array. Inversion Count: For an array, inversion count indicates how far (or close) the array is from being sorted. If array is already sorted then the inversion count is 0. If an array is sorted in the reverse order then the inversion count is the maximum. Formally, two elements a[i] and a[j] form an inversion if a[i] > a[j] and i < j.",questionLink:"https://practice.geeksforgeeks.org/problems/inversion-of-array-1587115620/1",samples:[{input:"N = 5, arr[] = {2, 4, 1, 3, 5}",output:"3",explaination:"The sequence 2, 4, 1, 3, 5 has three inversions (2, 1), (4, 1), (4, 3)."},{input:"N = 5 arr[] = {2, 3, 4, 5, 6}",output:"0",explaination:"As the sequence is already sorted so there is no inversion count."},{input:"N = 3, arr[] = {10, 10, 10}",output:"0",explaination:"As all the elements of array are same, so there is no inversion count."}],solutionLink:"https://raw.githubusercontent.com/suhas1294/love-babbar-450-dsa/main/src/main/java/rishi/atreya/_01_arrays/_14_NextPermutation.java",solutionLogic:"",solutionSteps:[],tags:["mergeSort"],credits:"https://www.geeksforgeeks.org/java-program-for-count-inversions-in-an-array-set-1-using-merge-sort/",time_complexity:"O(NLogN).",space_complexity:"O(N)."},{id:"16",question:"Best time to buy and sell stock",questionDescription:"You are given an array prices where prices[i] is the price of a given stock on the ith day. You want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock. Return the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0.",questionLink:"https://practice.geeksforgeeks.org/problems/inversion-of-array-1587115620/1",samples:[{input:"prices = [7,1,5,3,6,4]",output:"5",explaination:"Buy on day 2 (price = 1) and sell on day 5 (price = 6), profit = 6-1 = 5. Note that buying on day 2 and selling on day 1 is not allowed because you must buy before you sell."},{input:"prices = [7,6,4,3,1]",output:"0",explaination:"In this case, no transactions are done and the max profit = 0."}],solutionLink:"https://raw.githubusercontent.com/suhas1294/love-babbar-450-dsa/main/src/main/java/rishi/atreya/_01_arrays/_16_BestTimeToBuyAndSellStock.java",solutionLogic:"",solutionSteps:[],tags:[""],credits:"https://www.programcreek.com/2014/02/leetcode-best-time-to-buy-and-sell-stock-java/",time_complexity:"O(N).",space_complexity:""},{id:"17",question:"Count pairs with given sum",questionDescription:"Given an array of N integers, and an integer K, find the number of pairs of elements in the array whose sum is equal to K.",questionLink:"https://practice.geeksforgeeks.org/problems/count-pairs-with-given-sum5022/1",samples:[{input:"N = 4, K = 6 arr[] = {1, 5, 7, 1}",output:"2",explaination:"arr[0] + arr[1] = 1 + 5 = 6 and arr[1] + arr[3] = 5 + 1 = 6."},{input:"N = 4, X = 2 arr[] = {1, 1, 1, 1}",output:"6",explaination:"Each 1 will produce sum 2 with any 1."}],solutionLink:"https://raw.githubusercontent.com/suhas1294/love-babbar-450-dsa/main/src/main/java/rishi/atreya/_01_arrays/_17_GetPairCount.java",solutionLogic:"",solutionSteps:[],tags:["hashmap"],credits:"https://www.geeksforgeeks.org/count-pairs-with-given-sum/",time_complexity:"O(N).",space_complexity:"o(N)"},{id:"18",question:"Find common elements in 3 sorted arrays",questionDescription:"Given three arrays sorted in increasing order. Find the elements that are common in all three arrays. Note: can you take care of the duplicates without using any additional Data Structure?, f there are no such elements return an empty array. In this case the output will be printed as -1.",questionLink:"https://practice.geeksforgeeks.org/problems/common-elements1132/1",samples:[{input:"n1 = 6; A = {1, 5, 10, 20, 40, 80} n2 = 5; B = {6, 7, 20, 80, 100} n3 = 8; C = {3, 4, 15, 20, 30, 70, 80, 120}",output:"20 ,80",explaination:""},{input:"N = 4, X = 2 arr[] = {1, 1, 1, 1}",output:"6",explaination:"Each 1 will produce sum 2 with any 1."}],solutionLink:"https://raw.githubusercontent.com/suhas1294/love-babbar-450-dsa/main/src/main/java/rishi/atreya/_01_arrays/_18_FindCommonElementsIn3UnsortedArr.java",solutionLogic:"",solutionSteps:[],tags:["hashset"],credits:"https://www.geeksforgeeks.org/find-common-elements-three-sorted-arrays/",time_complexity:"O(n1 + n2 + n3)",space_complexity:"O(n1 + n2 + n3)"},{id:"19",question:"Rearrange array in alternating positive & negative items with O(1) extra space",questionDescription:"Given an array of positive and negative numbers, arrange them in an alternate fashion such that every positive number is followed by negative and vice-versa maintaining the order of appearance.  Number of positive and negative numbers need not be equal. If there are more positive numbers they appear at the end of the array. If there are more negative numbers, they too appear in the end of the array.",questionLink:"https://www.geeksforgeeks.org/rearrange-array-alternating-positive-negative-items-o1-extra-space/",samples:[{input:"arr[] = {1, 2, 3, -4, -1, 4}",output:"arr[] = {-4, 1, -1, 2, 3, 4}",explaination:""},{input:"{-5, -2, 5, 2, 4, 7, 1, 8, 0, -8}",output:"{-5, 5, -2, 2, -8, 4, 7, 1, 8, 0}",explaination:""}],solutionLink:"https://raw.githubusercontent.com/suhas1294/love-babbar-450-dsa/main/src/main/java/rishi/atreya/_01_arrays/_19_AlternatePositiveNegative.java",solutionLogic:"",solutionSteps:[],tags:["sorting"],credits:"https://www.geeksforgeeks.org/rearrange-array-alternating-positive-negative-items-o1-extra-space/",time_complexity:" O(N*logN)",space_complexity:"O(1)"},{id:"20",question:"Subarray with 0 sum",questionDescription:"Given an array of positive and negative numbers. Find if there is a subarray (of size at-least one) with 0 sum.",questionLink:"https://practice.geeksforgeeks.org/problems/subarray-with-0-sum-1587115621/1",samples:[{input:"arr[] = {4 2 -3 1 6",output:"true",explaination:"2, -3, 1 is the subarray with sum 0."},{input:"{4 2 0 1 6}",output:"true",explaination:"0 is one of the element in the array so there exist a subarray with sum 0."}],solutionLink:"https://raw.githubusercontent.com/suhas1294/love-babbar-450-dsa/main/src/main/java/rishi/atreya/_01_arrays/_20_SubArrayWithSumZero.java",solutionLogic:"",solutionSteps:[],tags:["hashset","subArray"],credits:"https://github.com/imKashyap/Final450-Solutions/blob/main/array/SubarraySumZero.java",time_complexity:"",space_complexity:""},{id:"21",question:"Factorials of large numbers",questionDescription:"Given an number, find its factorial",questionLink:"https://practice.geeksforgeeks.org/problems/factorials-of-large-numbers2508/1",samples:[],solutionLink:"https://raw.githubusercontent.com/suhas1294/love-babbar-450-dsa/main/src/main/java/rishi/atreya/_01_arrays/_21_FactorialOfLargeNumber.java",solutionLogic:"",solutionSteps:["step-1: Create an array ‘res[]’ of MAX size where MAX is number of maximum digits in output.","step-2: Initialize value stored in ‘res[]’ as 1 and initialize ‘res_size’ (size of ‘res[]’) as 1.","step-3: Do following for all numbers from x = 2 to n. Multiply x with res[] and update res[] and res_size to store the multiplication result.","step-4: How to multiply a number ‘x’ with the number stored in res[]? simple school mathematics","ref: https://github.com/imKashyap/Final450-Solutions/blob/main/array/LargeFactorial.java"],tags:["ArrayList"],credits:"https://www.geeksforgeeks.org/factorial-large-number/",time_complexity:"O(N^2)",space_complexity:"O(1)"},{id:"22",question:"Find Maximum Product subarray",questionDescription:"Given an array that contains both positive and negative integers, find the product of the maximum product subarray. Expected Time complexity is O(n) and only O(1) extra space can be used.",questionLink:"https://practice.geeksforgeeks.org/problems/factorials-of-large-numbers2508/1",samples:[{input:"{6, -3, -10, 0, 2}",output:"180  // The subarray is {6, -3, -10}"},{input:"{-1, -3, -10, 0, 60}",output:"60  // The subarray is {60}"},{input:"{-2, -40, 0, -2, -3}",output:"80  // The subarray is {-2, -40}"}],solutionLink:"https://raw.githubusercontent.com/suhas1294/love-babbar-450-dsa/main/src/main/java/rishi/atreya/_01_arrays/_22_MaxProductSubArray.java",solutionLogic:"",solutionSteps:[],tags:["subArray","Kadane"],credits:"https://www.geeksforgeeks.org/maximum-product-subarray/",time_complexity:"O(N^2)",space_complexity:"O(1)"},{id:"23",question:"Longest consequtive subsequence",questionDescription:"Given an array of positive integers. Find the length of the longest sub-sequence such that elements in the subsequence are consecutive integers, the consecutive numbers can be in any order.",questionLink:"https://www.geeksforgeeks.org/longest-consecutive-subsequence/",samples:[{input:"{2,6,1,9,4,5,3}",output:"6",explaination:"The consecutive numbers here are 1, 2, 3, 4, 5, 6. These 6 numbers form the longest consecutive subsquence."},{input:"{1,9,3,10,4,20,2}",output:"4",explaination:"1, 2, 3, 4 is the longest consecutive subsequence."}],solutionLink:"https://raw.githubusercontent.com/suhas1294/love-babbar-450-dsa/main/src/main/java/rishi/atreya/_01_arrays/_23_LongestConsequtiveSubsequence.java",solutionLogic:"",solutionSteps:["step-1 : Create an empty hash.","step-2 : Insert all array elements to hash.","step-3 : Do following for every element arr[i]","step-4 : Check if this element is the starting point of a subsequence. To check this, simply look for arr[i] – 1 in the hash, if not found, then this is the first element a subsequence.","step-5 : If this element is the first element, then count the number of elements in the consecutive starting with this element. Iterate from arr[i] + 1 till the last element that can be found.","step-6 : If the count is more than the previous longest subsequence found, then update this."],tags:["hashset"],credits:"https://www.geeksforgeeks.org/longest-consecutive-subsequence/",time_complexity:"",space_complexity:""},{id:"24",question:"Given an array of size n and a number k, find all elements that appear more than n/k times",questionDescription:"Given an array of size n, find all elements in array that appear more than n/k times. For example, if the input arrays is {3, 1, 2, 2, 1, 2, 3, 3} and k is 4, then the output should be [2, 3]. Note that size of array is 8 (or n = 8), so we need to find all elements that appear more than 2 (or 8/4) times. There are two elements that appear more than two times, 2 and 3.",questionLink:"https://www.geeksforgeeks.org/given-an-array-of-of-size-n-finds-all-the-elements-that-appear-more-than-nk-times/",samples:[{input:"{2,6,1,9,4,5,3}",output:"6",explaination:"The consecutive numbers here are 1, 2, 3, 4, 5, 6. These 6 numbers form the longest consecutive subsquence."},{input:"{1,9,3,10,4,20,2}",output:"4",explaination:"1, 2, 3, 4 is the longest consecutive subsequence."}],solutionLink:"https://raw.githubusercontent.com/suhas1294/love-babbar-450-dsa/main/src/main/java/rishi/atreya/_01_arrays/_24_FindElementInArrayNByKTimes.java",solutionLogic:"",solutionSteps:["brute force: A simple method is to pick all elements one by one. For every picked element, count its occurrences by traversing the array, if count becomes more than n/k, then print the element. Time Complexity of this method would be O(n2).","optimized solution: . First, sort all elements using a O(nLogn) algorithm. Once the array is sorted, we can find all required elements in a linear scan of array. So overall time complexity of this method is O(nLogn) + O(n) which is O(nLogn).","Much more optimized solution: ","step-1: Create a temporary array of size (k-1) to store elements and their counts (The output elements are going to be among these k-1 elements). Following is structure of temporary array elements. This step takes O(k) time. ","step-2: Traverse through the input array and update temp[] (add/remove an element or increase/decrease count) for every traversed element. The array temp[] stores potential (k-1) candidates at every step. This step takes O(nk) time.","step-3: Iterate through final (k-1) potential candidates (stored in temp[]). or every element, check if it actually has count more than n/k. This step takes O(nk) time."],tags:["tetris"],credits:"https://www.geeksforgeeks.org/given-an-array-of-of-size-n-finds-all-the-elements-that-appear-more-than-nk-times/",time_complexity:"O(N^2), O(n Log n) and O(nk) respectively",space_complexity:"O(k) for most optimized soln"},{id:"25",question:"Maximum profit by buying and selling a share at most twice",questionDescription:"In daily share trading, a buyer buys shares in the morning and sells them on the same day. If the trader is allowed to make at most 2 transactions in a day, whereas the second transaction can only start after the first one is complete (Buy->sell->Buy->sell). Given stock prices throughout the day, find out the maximum profit that a share trader could have made.",questionLink:"https://www.geeksforgeeks.org/maximum-profit-by-buying-and-selling-a-share-at-most-twice/",samples:[{input:"price[] = {10, 22, 5, 75, 65, 80}",output:"87",explaination:"Trader earns 87 as sum of 12, 75 Buy at 10, sell at 22, Buy at 5 and sell at 80"},{input:"price[] = {2, 30, 15, 10, 8, 25, 80}",output:"100",explaination:"Trader earns 100 as sum of 28 and 72 Buy at price 2, sell at 30, buy at 8 and sell at 80"},{input:"price[] = {100, 30, 15, 10, 8, 25, 80};",output:"72",explaination:"Buy at price 8 and sell at 80."},{input:" price[] = {90, 80, 70, 60, 50}",output:"0",explaination:"Not possible to earn."}],solutionLink:"https://raw.githubusercontent.com/suhas1294/love-babbar-450-dsa/main/src/main/java/rishi/atreya/_01_arrays/_25_MaxSHareProfitBuySellTwice.java",solutionLogic:"",solutionSteps:["step-0: The idea is to store the maximum possible profit of every subarray and solve the problem in the following two phases.","step-1: Create a table profit[0..n-1] and initialize all values in it 0.","step-2: Traverse price[] from right to left and update profit[i] such that profit[i] stores maximum profit achievable from one transaction in subarray price[i..n-1]","step-3: Traverse price[] from left to right and update profit[i] such that profit[i] stores maximum profit such that profit[i] contains maximum achievable profit from two transactions in subarray price[0..i].","step-4: Return profit[n-1]","step-5: To do step 2, we need to keep track of the maximum price from right to left side, and to do step 3, we need to keep track of the minimum price from left to right. Why we traverse in reverse directions? The idea is to save space, in the third step, we use the same array for both purposes, maximum with 1 transaction and maximum with 2 transactions. After iteration i, the array profit[0..i] contains the maximum profit with 2 transactions, and profit[i+1..n-1] contains profit with two transactions."],tags:["dynamicProgramming","valleyPeak"],credits:"https://www.geeksforgeeks.org/maximum-profit-by-buying-and-selling-a-share-at-most-twice/",time_complexity:"O(n)",space_complexity:""}];function _(){return o.createElement("div",{className:"nav"},o.createElement("ul",null,o.createElement("li",null,o.createElement(l,{className:"nav-link",to:"/"},"Ds-ALGO")),o.createElement("li",null,o.createElement(l,{className:"nav-link",to:"/problems"},"Problems"))))}function f({samples:e}){return e.map(((e,t)=>o.createElement("div",{key:t,className:"example-io-blk"},o.createElement("p",null,"example-",t+1),o.createElement("p",null,o.createElement("span",{className:"label-highlight"},"Input")," : ",e.input," ",o.createElement("br",null),o.createElement("span",{className:"label-highlight"},"Output")," :"," ",e.output,o.createElement("br",null),e.explaination?o.createElement(o.Fragment,null,o.createElement("span",{className:"label-highlight"},"Explaination"),": ",e.explaination):null))))}function b({steps:e}){const t=e.map(((e,t)=>o.createElement("li",{key:t},e)));return o.createElement("ol",null,t)}function v({tags:e}){return o.createElement("div",{className:"tag-block"},e.map(((e,t)=>o.createElement("p",{key:t},"#",e," "))))}const w=u.exports.forwardRef(((e,t)=>o.createElement("div",{ref:t,className:"loader"},"Loading...")));function k({refetchLink:e,setCode:t,setError:a}){return o.createElement("div",{className:"error-block"},o.createElement("h1",null,"Oops ! we could not load the code snippet, please try reloading"),o.createElement("button",{onClick:()=>{t(""),fetch(e).then((e=>e.text())).then((e=>{if(e.includes("404"))throw new Error("404");t(e)})).catch((()=>{a(!0),t("")}))}},"Refresh"))}function x({time_complexity:e,space_complexity:t}){return o.createElement("div",{class:"complexity-wrapper"},o.createElement("p",{className:"solLogic"},o.createElement("span",{className:"label-highlight"},"Time Complexity: "),e),t?o.createElement("p",{className:"solLogic"},o.createElement("span",{className:"label-highlight"},"Space Complexity: "),t):null)}function j(e){const[t,a]=u.exports.useState(""),[n,i]=u.exports.useState(!1),[r,s]=u.exports.useState(!1),{id:l,question:p,questionDescription:h,questionLink:g,samples:d,solutionLink:y,solutionLogic:_,solutionSteps:j,tags:L,credits:q,time_complexity:E,space_complexity:S}=e;return u.exports.useEffect((()=>{r&&fetch(y).then((e=>e.text())).then((e=>{if(e.includes("404"))throw new Error("404");a(e)})).catch((()=>i(!0)))}),[r]),o.createElement("article",{id:l},o.createElement("div",{className:"question-details"},o.createElement("h3",null,p),o.createElement("p",{className:"qdesc"},h),g?o.createElement("a",{href:g,target:"_blank",className:"qlink"},"Question Link"):null,d&&d.length>0?o.createElement(f,{samples:d}):null,o.createElement("div",{className:"content"},n&&r?o.createElement(k,{refetchLink:y,setCode:a,setError:i}):null,E||S?o.createElement(x,{time_complexity:E,space_complexity:S}):null,_?o.createElement("p",{className:"solLogic"},o.createElement("span",{className:"label-highlight"},"Logic: "),_):null,j&&j.length>0?o.createElement(b,{steps:j}):null,q?o.createElement(o.Fragment,null,o.createElement("span",{className:"label-highlight"},"Credits: "),o.createElement("a",{target:"_blank",href:q},q)):null),L&&L.length>0?o.createElement(v,{tags:L}):null),o.createElement("div",{className:"sol-details"},o.createElement("button",{type:"button",className:"collapsible",onClick:()=>s((e=>!e))},"Solution"),t?o.createElement("div",{className:r?"dsa-code-block-active":"dsa-code-block-nodisplay"},o.createElement(m,{language:"java",style:c},t)):r&&!n?o.createElement(w,null):null))}const L=u.exports.forwardRef(((e,t)=>o.createElement("div",{ref:t,className:"loader"},"Loading...")));function q(){const[e,l]=u.exports.useState(y.slice(0,10)),m=u.exports.useRef();const c=u.exports.useCallback((t=>{t.forEach((t=>{t.isIntersecting&&e.length<y.length&&l((e=>[...e,...y.slice(e.length,e.length+10)]))}))}),[]),p=u.exports.useMemo((()=>({root:null,threshold:.8})),[]),h=function(e,t=200){let a;return(...n)=>{clearTimeout(a),a=setTimeout((()=>{e.apply(this,n)}),t)}}((e=>(e=>{const t=e.toLowerCase().trim();if(e){const e=y.filter((e=>e.question.toLowerCase().includes(t)||e.questionDescription.toLowerCase().includes(t)||e.tags.some((e=>e.toLowerCase().includes(t)))));l(e)}else l(y)})(e.target.value)));return u.exports.useEffect((()=>{const e=new IntersectionObserver(c,p);m.current&&e.observe(m.current)}),[m]),o.createElement(o.Fragment,null,o.createElement(_,null),o.createElement("div",{id:"wrapper"},o.createElement("input",{type:"text",id:"search-dsa",placeholder:"search for tags, words in questions..",onChange:h}),e&&e.map((e=>{return o.createElement(j,(l=((e,t)=>{for(var a in t||(t={}))i.call(t,a)&&s(e,a,t[a]);if(n)for(var a of n(t))r.call(t,a)&&s(e,a,t[a]);return e})({},e),u={key:`"id" + ${Math.random().toString(16).slice(2)}`},t(l,a(u))));var l,u})),e.length<y.length?o.createElement(L,{ref:m}):null))}var E=[{section_name:"Nodes",section_code_links:["/_03_linkedlist/nodes/Node.java","/_03_linkedlist/nodes/DoublyNode.java","/_06_tree/BinaryNode.java","/_11_graph/GraphNode.java","/_11_graph/_04_sssp/_00_nodes/WeightedNode.java","/_11_graph/_06_mst/UndirectedEdge.java"]},{section_name:"Linked list",section_code_links:["/_03_linkedlist/_01_singly_linkedlist/SinglyLinkedList.java","/_03_linkedlist/_02_circular_singly_linkedlist/SingleCircularLinkedList.java","/_03_linkedlist/_03_doubly_linkedlist/DoubleLinkedList.java","/_03_linkedlist/_04_doubly_circular_linkedlist/DoubleCircularLinkedList.java"]},{section_name:"Logical Data structures",section_code_links:["/_04_stack/StackByArray.java","/_04_stack/StackByLinkedList.java","/_05_queue/_02_linear_queue_array/QueueByArray.java","/_05_queue/_01_linear_array_LL/QueueByLinkedList.java","/_06_tree/_01_binary_tree/_01_array/BinaryTreeByArray.java","/_06_tree/_01_binary_tree/_02_LL/BinaryTreeByLinkedList.java","/_06_tree/_02_binary_search_tree/BinarySearchTreeByLinkedList.java","/_08_trie/Trie.java","/_07_heap/HeapByArray.java","/_10_disjoint_set/DisjointSet.java"]},{section_name:"Sorting",section_code_links:["/_12_sorting/_01_bubble/BubbleSort.java","/_12_sorting/_02_selection/SelectionSort.java","/_12_sorting/_03_insertion/InsertionSort.java","/_12_sorting/_04_bucket/BucketSort.java","/_12_sorting/_05_merge/MergeSort.java","/_12_sorting/_06_quick/QuickSort.java","/_12_sorting/_07_heap/HeapSort.java"]},{section_name:"Graph - Implementation",section_code_links:["/_11_graph/_00_implementation/_01_matrix/BFSByAdjacencyMatrix.java","/_11_graph/_00_implementation/_02_linkedlist/BFSByLinkedList.java"]},{section_name:"Graph - Traversals",section_code_links:["/_11_graph/_01_bfs/PathFindingByBFS.java","/_11_graph/_02_dfs/DFSRecursive.java","/_11_graph/_03_topoolgical_sort/TopologicalSort.java"]},{section_name:"Graph - SSSP - ASSP",section_code_links:["/_11_graph/_04_sssp/_01_bfs_sssp/PathFindingByBFS.java","/_11_graph/_04_sssp/_02_dijkstra/PathFindingByDijkstra.java","/_11_graph/_04_sssp/_03_bellman_ford/PathFindingByBellmanFord.java","/_11_graph/_05_apsp/_01_floyd_Warshall/FloydWarshall.java"]},{section_name:"Graph - Minimum spanning tree",section_code_links:["/_11_graph/_06_mst/_01_kruskal/Kruskal.java","/_11_graph/_06_mst/_02_prims/Prims.java","/_11_graph/_04_sssp/_03_bellman_ford/PathFindingByBellmanFord.java","/_11_graph/_05_apsp/_01_floyd_Warshall/FloydWarshall.java"]},{section_name:"Hashing",section_code_links:["/_09_hashing/_01_direct_chaining/DirectChaining.java","/_09_hashing/_02_open_addressing/_01_linear_probing/LinearProbing.java","/_09_hashing/_02_open_addressing/_02_quadratic_probing/QuadraticProbing.java","/_09_hashing/_02_open_addressing/_03_double_hashing/DoubleHashing.java"]}];function S({code:e}){return e&&o.createElement("div",{className:"code-block"},o.createElement(m,{language:"java",style:c},e))}function N({collection:e}){return o.createElement("div",{className:"code-collection"},e.map(((e,t)=>o.createElement(S,{key:t,code:e}))))}function O({name:e,links:t}){let a;const n=t.map((e=>(a=e.includes("http")?"":e.includes("raw")?"https://gist.githubusercontent.com/suhas1294/":"https://raw.githubusercontent.com/suhas1294/java-ds-algo/main/src/main/java/com/atreya",`${a}${e}`))),[i,r]=u.exports.useState(null),s=(l=n,u.exports.useCallback((async()=>{const e=await Promise.all(l.map((e=>fetch(e)))),t=await Promise.all(e.map((e=>e.text())));return new Promise(((e,a)=>e(t)))}),[]));var l;return u.exports.useEffect((()=>{s().then((e=>r(e)))}),[]),i?o.createElement("section",null,o.createElement("h2",null,e),o.createElement(N,{collection:i})):o.createElement(L,null)}function F(){const e=E.map((e=>o.createElement(O,{key:e.section_name,name:e.section_name,links:e.section_code_links})));return o.createElement(o.Fragment,null,o.createElement(_,null),e)}function T(){return o.createElement(o.Fragment,null,o.createElement(p,null,o.createElement(h,{path:"/",exact:!0},o.createElement(F,null)),o.createElement(h,{path:"/problems",problems:!0},o.createElement(q,null))))}g.render(o.createElement(o.StrictMode,null,o.createElement(d,null,o.createElement(T,null))),document.getElementById("root"));
